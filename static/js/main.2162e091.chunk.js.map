{"version":3,"sources":["components/Statistics.js","components/FeedbackOptions.js","components/Section.js","components/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","el","type","name","onClick","uuidv4","Section","title","children","Notification","message","App","state","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RA6BeA,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,+BACE,sCACA,4BAAIJ,OAEN,+BACE,yCACA,4BAAIC,OAEN,+BACE,qCACA,4BAAIC,OAEN,+BACE,uCACA,4BAAIC,OAEN,+BACE,mDACW,IAAVA,EAAc,mCAAY,4BAAIC,W,QCHxBC,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAE,OAC1B,wBAEEC,KAAK,SACLC,KAAMF,EACNG,QAASP,EAJX,SAMGI,GALII,qBCGAC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCAQC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KCIRC,E,4MACJC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,gBAAkB,SAAAgB,GAChB,IAAQV,EAASU,EAAEC,OAAXX,KACR,EAAKY,UAAS,SAAAC,GACZ,OAAO,eAAGb,EAAOa,EAAUb,GAAQ,O,EAIvCc,mBAAqB,WACnB,MAA+B,EAAKL,MAEpC,OAFA,EAAQtB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzB0B,gCAAkC,WAChC,IAAQ5B,EAAS,EAAKsB,MAAdtB,KAGR,OADE6B,KAAKC,MAAO9B,EAAO,EAAK2B,qBAAwB,KAAO,K,4CAI3D,WACE,MAA+BI,KAAKT,MAA5BtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAErBK,EAGEwB,KAHFxB,gBACAoB,EAEEI,KAFFJ,mBACAC,EACEG,KADFH,gCAEF,OACE,gCACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAASyB,KAAKT,MACdf,gBAAiBA,MAIrB,cAAC,EAAD,CAASU,MAAM,aAAf,SAC4B,IAAzBU,IACC,cAAC,EAAD,CAAcP,QAAQ,sBAEtB,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,IACPvB,mBAAoBwB,e,GApDhBI,aA6DHX,IC/DfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2162e091.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <p>Good:</p>\r\n        <p>{good}</p>\r\n      </li>\r\n      <li>\r\n        <p>Neutral:</p>\r\n        <p>{neutral}</p>\r\n      </li>\r\n      <li>\r\n        <p>Bad:</p>\r\n        <p>{bad}</p>\r\n      </li>\r\n      <li>\r\n        <p>Total:</p>\r\n        <p>{total}</p>\r\n      </li>\r\n      <li>\r\n        <p>Positive feedback:</p>\r\n        {total === 0 ? <p>0%</p> : <p>{positivePercentage}</p>}\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {Object.keys(options).map(el => (\r\n        <button\r\n          key={uuidv4()}\r\n          type=\"button\"\r\n          name={el}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {el}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h3>{message}</h3>;\r\n};\r\n\r\nexport default Notification;\r\n","import './App.css';\r\nimport { Component } from 'react';\r\nimport Statistics from './components/Statistics';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Section from './components/Section';\r\nimport Notification from './components/Notification';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = e => {\r\n    const { name } = e.target;\r\n    this.setState(prevState => {\r\n      return { [name]: prevState[name] + 1 };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const positivePercentage =\r\n      Math.round((good / this.countTotalFeedback()) * 100) + '%';\r\n    return positivePercentage;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const {\r\n      onLeaveFeedback,\r\n      countTotalFeedback,\r\n      countPositiveFeedbackPercentage,\r\n    } = this;\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={onLeaveFeedback}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {countTotalFeedback() === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={countTotalFeedback()}\r\n              positivePercentage={countPositiveFeedbackPercentage()}\r\n            />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}